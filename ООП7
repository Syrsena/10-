using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp26
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Work work = new Work();
            work.Menu();
        }
    }

    class Work
    {
        private List<Flight> _flights = new List<Flight>();

        public void Menu()
        {
            const string CommandCreateRoute = "1";
            const string CommandSellTickets = "2";
            const string CommandFormTrain = "4";
            const string CommandSendTrain = "5";
            const string CommandExit = "0";

            string startingPoint;
            string endingPoint;
            bool isActive = true;

            while (isActive)
            {
                Console.Clear();
                Console.WriteLine(
                    CommandCreateRoute + " - Создать направление поезда\n" +
                    CommandSellTickets + " - Продать билеты\n" +
                    CommandFormTrain + " - Сформировать поезд\n" +
                    CommandSendTrain + " - Отправить поезд\n" +
                    CommandExit + " - Выход\n");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandCreateRoute:
                        CreateRoute(out startingPoint,out endingPoint);
                        break;
                    case CommandSellTickets:
                        SellTickets(startingPoint, endingPoint);
                        break;
                    case CommandFormTrain:

                        break;
                    case CommandSendTrain:

                        break;
                    case CommandExit:

                        break;
                    default:
                        Console.Clear();
                        break;
                }
            }
        }

        private void CreateRoute(out string userInputStartingPoint,out string userInputEndingPoint)
        {
            if(_flights.Count > 0)
            Console.Clear();
            Console.WriteLine("Введите начальную точку маршрута: ");
            userInputStartingPoint = Console.ReadLine();
            Console.WriteLine("Введите конечную точку маршрута: ");
            userInputEndingPoint = Console.ReadLine();
            Console.WriteLine("Успешно!");
            Console.ReadKey();
        }

        private void SellTickets(string startingPoint, string endingPoint)
        {
            Console.Clear();
            Random random = new Random();
            int selledTicketsCount = random.Next(0, 1000);
            Flight flight = new Flight(startingPoint, endingPoint, selledTicketsCount); //null
            _flights.Add(flight);

            Console.WriteLine("Продано - " + selledTicketsCount + " билетов");
            Console.ReadKey();
        }
    }

    class Flight // переводится как рейс. звучит как перелет конечно, но...
    {
        public string StartingPoint { get; private set; }
        public string EndingPoint { get; private set; }
        public int SelledTicketsCount { get; private set; }

        public Flight(string startingPoint, string endingPoint, int selledTicketsCount)
        {
            StartingPoint = startingPoint;
            EndingPoint = endingPoint;
            SelledTicketsCount = selledTicketsCount;
        }

        //public void SetRoute(string startingPoint, string endingPoint)
        //{
        //    StartingPoint = startingPoint;
        //    EndingPoint= endingPoint;
        //}
    }
}
