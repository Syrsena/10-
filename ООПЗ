using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace ConsoleApp15

{
    internal class Program
    {
        static void Main(string[] args)
        {
            Database database = new Database(new List<Player>());
            database.Work();
        }
    }

    class Database
    {
        private List<Player> _players;

        public Database(List<Player> players)
        {
            _players = players;
        }

        private void AddPlayer()
        {
            Console.Clear();
            Console.WriteLine("Введите имя нового игрока: ");
            string userInputName = Console.ReadLine();
            Console.WriteLine("Введите начальный уровень игрока");
            int userInputLevel = CheckNumber();
            _players.Add(new Player(userInputName, userInputLevel, false));
            Console.WriteLine("Игрок с ником - " + userInputName + " добавлен.");
            Console.ReadKey();
            Console.Clear();
        }

        private void RemovePlayer()
        {
            Console.Clear();
            Console.WriteLine("Введите ID игрока: ");
            int userInputID = CheckNumber();

            for (int i = 0; i < _players.Count; i++)
            {
                if (_players[i].ID == userInputID)
                {
                    _players.Remove(_players[i]);
                    Console.WriteLine("Игрок удален.");
                    Console.ReadKey();
                    Console.Clear();
                }
            }
            Console.Clear();
        }

        private void ShowAllPlayers()
        {
            Console.Clear();

            foreach (var player in _players)
            {
                player.ShowInfo();
            }
            Console.ReadKey();
            Console.Clear();
        }

        private void BanPlayerByID()
        {
            Console.Clear();
            Console.WriteLine("Введите ID игрока: ");
            int userInputID = CheckNumber();

            foreach (var player in _players)
            {
                if (player.ID == userInputID)
                {
                    player.Ban();
                }
            }
            Console.Clear();
        }

        private void UnBanPlayerByID()
        {
            Console.Clear();
            Console.WriteLine("Введите ID игрока: ");
            int userInputID = CheckNumber();

            foreach (var player in _players)
            {
                if (player.ID == userInputID)
                {
                    player.UnBan();
                }
            }
            Console.Clear();
        }

        private void SearchPlayer()
        {
            Console.Clear();
            Console.WriteLine("Введите ID игрока: ");
            int userInputID = CheckNumber();

            foreach (var player in _players)
            {
                if (player.ID == userInputID)
                {
                    CheckPlayer(out player);
                }
            }
            Console.Clear();
        }

        private bool CheckPlayer(out Player player)
        {
            if (player != null)
            {

            }
        }

        private int CheckNumber()
        {
            int number;

            while (int.TryParse(Console.ReadLine(), out number) == false)
            {
                Console.WriteLine("Укажите число");
            }
            
            return number;
        }

        public void Work()
        {
            const string CommandAddPlayer = "1";
            const string CommandRemovePlayer = "2";
            const string CommandBanPlayer = "3";
            const string CommandUnBanPlayer = "4";
            const string CommandShowInfo = "5";
            const string CommandSearchPlayer = "6";
            const string CommandExit = "7";
            bool isActive = true;

            while (isActive == true)
            {
                Console.WriteLine(CommandAddPlayer + " - Добавить игрока\n" +
                    CommandRemovePlayer + " - Удалить игрока\n" +
                    CommandBanPlayer + " - Забанить игрока\n" +
                    CommandUnBanPlayer + " - Разбанить игрока\n" +
                    CommandShowInfo + " - Вывод списка игроков\n" +
                    CommandSearchPlayer + " - Поиск игрока\n" +
                    CommandExit + " - Выход из программы\n");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandAddPlayer:
                        AddPlayer();
                        break;
                    case CommandRemovePlayer:
                        RemovePlayer();
                        break;
                    case CommandBanPlayer:
                        BanPlayerByID();
                        break;
                    case CommandUnBanPlayer:
                        UnBanPlayerByID();
                        break;
                    case CommandShowInfo:
                        ShowAllPlayers();
                        break;
                    case CommandSearchPlayer:
                        SearchPlayer();
                        break;
                    case CommandExit:
                        isActive = false;
                        break;
                    default:
                        Console.Clear();
                        break;
                }
            }
        }
    }

    class Player
    {
        private static int _lastId;
        private int _id;
        private string _name;
        private int _level;
        private bool _isBanned;

        public Player(string name, int level, bool isBanned)
        {
            _id = ++_lastId;
            _name = name;
            _level = level;
            _isBanned = isBanned;
        }

        public void ShowInfo()
        {
            Console.WriteLine(_id + " " + _name + " " + _level + " " + "Статус бана: " + _isBanned);
        }

        public void Ban()
        {
            _isBanned = true;
            Console.WriteLine("Игрок забанен.");
            Console.ReadKey();
            Console.Clear();
        }

        public void UnBan()
        {
            _isBanned = false;
            Console.WriteLine("Игрок разбанен.");
            Console.ReadKey();
            Console.Clear();
        }

        public int ID
        {
            get
            {
                return _id;
            }
        }
    }
}
