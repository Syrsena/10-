using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace ConsoleApp15
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;
            bool isPlaying = true;
            int pacmanPositionX;
            int pacmanPositionY;
            int pacmanDirectionX = 0;
            int pacmanDirectionY = 1;
            int allDots = 0;
            int collectDots = 0;
            char[,] map = ReadMap("map1", out pacmanPositionX, out pacmanPositionY, ref allDots);
            DrawMap(map);

            while (isPlaying)
            {
                Console.SetCursorPosition(0, 25);
                Console.WriteLine($"Собрано: {collectDots}/{allDots}");

                if (Console.KeyAvailable)
                {
                    ConsoleKeyInfo key = Console.ReadKey(true);
                    ChangeDirection(key, ref pacmanDirectionX, ref pacmanDirectionY);
                }

                if (map[pacmanPositionX + pacmanDirectionX, pacmanPositionY + pacmanDirectionY] != '#')
                {
                    Move(ref pacmanPositionX, ref pacmanPositionY, pacmanDirectionX, pacmanDirectionY);
                    CollectDots(map, pacmanPositionX, pacmanPositionY, ref collectDots);
                }

                System.Threading.Thread.Sleep(150);

                if (collectDots == allDots)
                {
                    isPlaying = false;
                }
            }

            Console.SetCursorPosition(0, 27);

            if (collectDots == allDots)
            {
                Console.WriteLine("Ура, победа!");
            }
        }

        static void Move(ref int pacmanPositionX, ref int pacmanPositionY, int pacmanDirectionX, int pacmanDirectionY)
        {
            Console.SetCursorPosition(pacmanPositionY, pacmanPositionX);
            Console.Write(" ");
            pacmanPositionX += pacmanDirectionX;
            pacmanPositionY += pacmanDirectionY;
            Console.SetCursorPosition(pacmanPositionY, pacmanPositionX);
            Console.Write('@');
        }

        static void CollectDots(char[,] map, int pacmanPositionX, int pacmanPositionY, ref int collectDots)
        {
            if (map[pacmanPositionX, pacmanPositionY] == '.')
            {
                collectDots++;
                map[pacmanPositionX, pacmanPositionY] = ' ';
            }
        }

        static void ChangeDirection(ConsoleKeyInfo key, ref int pacmanDirectionX, ref int pacmanDirectionY)
        {
            const ConsoleKey keyMoveUp = ConsoleKey.UpArrow;
            const ConsoleKey keyMoveDown = ConsoleKey.DownArrow;
            const ConsoleKey keyMoveLeft = ConsoleKey.LeftArrow;
            const ConsoleKey keyMoveRight = ConsoleKey.RightArrow;

            switch (key.Key)
            {
                case keyMoveUp:
                    pacmanDirectionX = -1;
                    pacmanDirectionY = 0;
                    break;
                case keyMoveDown:
                    pacmanDirectionX = 1;
                    pacmanDirectionY = 0;
                    break;
                case keyMoveLeft:
                    pacmanDirectionX = 0;
                    pacmanDirectionY = -1;
                    break;
                case keyMoveRight:
                    pacmanDirectionX = 0;
                    pacmanDirectionY = 1;
                    break;
            }
        }

        static void DrawMap(char[,] map)
        {
            for (int i = 0; i < map.GetLength(0); i++)
            {

                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.WriteLine();
            }
        }

        static char[,] ReadMap(string mapName, out int pacmanPositionX, out int pacmanPositionY, ref int allDots)
        {
            pacmanPositionX = 0;
            pacmanPositionY = 0;
            string[] newFile = File.ReadAllLines($"Maps/{mapName}.txt");
            char[,] map = new char[newFile.Length, newFile[0].Length];

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    map[i, j] = newFile[i][j];

                    if (map[i, j] == '@')
                    {
                        pacmanPositionX = i;
                        pacmanPositionY = j;
                    }
                    else if (map[i, j] == ' ')
                    {
                        map[i, j] = '.';
                        allDots++;
                    }
                }
            }

            return map;
        }
    }
}
